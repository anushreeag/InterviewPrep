public class Solution {
  // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
  public int[][] anagrams(final String[] A) {
      Map<String,ArrayList<Integer>> map = new HashMap<>();
     for(int i = 0 ;i<A.length;i++){
         String temp = sortedString(A[i]);
         ArrayList<Integer> list;
         if(map.containsKey(temp)){
             list = map.get(temp);
         }
         else{
             list = new ArrayList();
         }
         
         list.add(i+1);
         map.put(temp,list);
     }
     
     //System.out.println("Map "+map.size());
     int [][]result = new int[map.size()][];
     int i =0;
     for( String x : map.keySet()){
         ArrayList<Integer> list = map.get(x);
         //System.out.println("x ="+x+"List " +list.size());
         result [i] = new int[list.size()];
         for(int j = 0 ; j < list.size();j++){
              result[i][j] = list.get(j); 
         }
         i++;
     }
     
     
     return result;
  }
  
  private String sortedString(String a){
      char tempArray[] = a.toCharArray();
       
      // sort tempArray
      Arrays.sort(tempArray);
      
      return new String(tempArray);
  }
} 