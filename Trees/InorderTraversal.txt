/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    ArrayList<Integer> list = new ArrayList<>();
    public int[] inorderTraversal(TreeNode A) {
        
        inOrder(A);
        int [] result = new int[list.size()];
        for(int i = 0 ;i<list.size();i++){
            result[i] = list.get(i);
        }
        return result;
    }
    
    public void inOrder(TreeNode A){
        Stack<TreeNode> stack = new Stack<TreeNode>();
        while(true){
            if(A!=null){
                stack.push(A);
                A = A.left;
            }
            else{
                if(stack.isEmpty())
                    break;
                A = stack.pop();
                list.add(A.val);
                A = A.right;
            }
        }
        
    }
}
