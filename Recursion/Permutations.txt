public class Solution {
    
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> A) {
        ArrayList<ArrayList<Integer>> result = new ArrayList();
        // positions
        int []selected = new int[A.size()];
        // based on index 
        int []disabled = new int[A.size()];
        getPermutations(0,A,selected,disabled, result);
        return result;
    }
    
    void getPermutations(int pos, ArrayList<Integer> A,
            int[] selected, int[] disabled,ArrayList<ArrayList<Integer>> result){
        if(pos>=selected.length){
            ArrayList<Integer> curPermutation = new ArrayList();
            for(int i=0;i<selected.length;i++)
                curPermutation.add(A.get(selected[i]));
            result.add(curPermutation);  
            // print
        }
        
        for(int i=0;i<A.size();i++){
            if(disabled[i]==1) continue;
            selected[pos] = i;
            disabled[i] = 1;
            getPermutations(pos+1, A, selected, disabled, result);
            disabled[i]=0;
        }
        
    }
}
