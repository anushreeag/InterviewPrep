/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode A) {
        
        ArrayList<ArrayList<Integer>> result = new ArrayList();
        if(A==null) return result;
        ArrayList<TreeNode> level = new ArrayList();
        level.add(A);
        while(level.size()>0){
            ArrayList<TreeNode> nextLevel = new ArrayList();
            ArrayList<Integer> curLevel = new ArrayList();
            int i=0;
            while(level.size()>0 && i<level.size()){
                TreeNode cur = level.get(i);
                curLevel.add(cur.val);
                if(cur.left!=null) nextLevel.add(cur.left);
                if(cur.right!=null) nextLevel.add(cur.right);
                i++;
            }
            
            result.add(curLevel);
            level = nextLevel;
        }
        
        return result;
    }
}
