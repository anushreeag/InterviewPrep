public class Solution {
    
    
    public int calculateMinimumHP(ArrayList<ArrayList<Integer>> A) {
        int m = A.size();
    	int n = A.get(0).size();
     
    	//init dp table
    	int[][] h = new int[m][n];
     
    	h[m - 1][n - 1] = Math.max(1 - A.get(m-1).get(n-1), 1);
     
    	//init last row
    	for (int i = m - 2; i >= 0; i--) {
    		h[i][n - 1] = Math.max(h[i + 1][n - 1] - A.get(i).get(n-1), 1);
    	}
     
    	//init last column
    	for (int j = n - 2; j >= 0; j--) {
    		h[m - 1][j] = Math.max(h[m - 1][j + 1] - A.get(m-1).get(j), 1);
    	}
     
    	//calculate dp table
    	for (int i = m - 2; i >= 0; i--) {
    		for (int j = n - 2; j >= 0; j--) {
    			int down = Math.max(h[i + 1][j] - A.get(i).get(j), 1);
    			int right = Math.max(h[i][j + 1] - A.get(i).get(j), 1);
    			h[i][j] = Math.min(right, down);
    		}
    	}
     
    	return h[0][0];
        
    }
}